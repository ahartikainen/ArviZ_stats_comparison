name: Linux

on: [push]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        r-version: [3.6.3]
        use-git : [true, false]
      fail-fast: false
    steps:
      - name: Checkout github
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}

      - name: Install python dependencies (pip)
        run: |
          pip install --upgrade pip
          pip install arviz pystan
        if: "!matrix.use-git"

      - name: Install python dependencies (git)
        run: |
          pip install --upgrade pip
          pip install git+git://github.com/stan-dev/pystan.git
          pip install git+git://github.com/arviz-devs/arviz.git
        if: matrix.use-git

      - name: Set up toolchain for R
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libv8-dev
          mkdir -p "${HOME}/.R"
          printf "\nCXX14FLAGS=-O3 -march=native -mtune=native -fPIC" >> "${HOME}/.R/Makevars"
          printf "\nCXX14=g++" >> "${HOME}/.R/Makevars"
          cat --show-all "${HOME}/.R/Makevars"
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'install.packages("jsonlite")'

      - name: Install R dependencies (cran)
        run: |
          Rscript -e 'install.packages("rstan", type = "source")'
        if: "!matrix.use-git"

      - name: Install R dependencies StanHeaders (git)
        run: |
          Rscript -e 'install.packages("Rcpp")'
          Rscript -e 'install.packages("RcppEigen")'
          Rscript -e 'install.packages("http://cran.r-project.org/src/contrib/Archive/StanHeaders/StanHeaders_2.21.0-1.tar.gz", repos=NULL, type="source")'
        if: matrix.use-git

      - name: Install R dependencies RStan (git)
        run: |
          Rscript -e 'remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "--no-build-vignettes")'
        if: matrix.use-git

      - name: RStan, PyStan and ArviZ versions
        run: |
          python -c 'import arviz;print("ArviZ version: {}".format(arviz.__version__))'
          python -c 'import pystan;print("PyStan version: {}".format(pystan.__version__))'
          Rscript -e 'library(rstan);print(paste("RStan version:", packageVersion("rstan"), sep = " "))'

      - name: Inject couts
        run: |
          find / -name "initialize.*pp" | xargs sed -i 's/unconstrained = random_context.get_unconstrained();/unconstrained = random_context.get_unconstrained();\n      logger.info("rng");\n      logger.info(rng);\n      logger.info("unconstrained");\n      logger.info(unconstrained);\n      logger.info("init");\n      logger.info(init);/'
      - name: Comparison RStan 8 schools
        run: |
          Rscript comparison_stats_rstan.R
      - name: Comparison ArviZ 8 schools
        run: |
          python comparison_stats_arviz.py
      - name: RStan seed test
        run: |
          Rscript run_rstan.R
      - name: PyStan seed test
        run: |
          python run_pystan.py
